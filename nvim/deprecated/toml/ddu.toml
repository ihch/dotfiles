[[plugins]]
repo = 'Shougo/ddu.vim'
depends = 'denops.vim'
on_source = 'denops.vim'
hook_source = '''
call ddu#custom#patch_global({
	\	'ui': 'ff',
	\	'kindOptions': {
	\		'file': { 'defaultAction': 'open' },
	\		'colorscheme': { 'defaultAction': 'set' },
	\	},
	\	'sources': [{ 'name': 'file', 'params': {}, }],
	\	'sourceOptions': {
	\		'_': {
	\			'ignoreCase': v:true,
	\			'columns': ['icon_filename'],
	\		},
	\	},
	\})

" uiParams filer
call ddu#custom#patch_global('uiParams', {
	\	'filer': 	{ 'split': 'floating', 'floatingBorder': 'rounded', 'autoAction': { 'name': 'preview', 'delay': 50 }, 'previewFloating': v:true, 'previewFloatingBorder': 'rounded' },
	\	'ff': 		{ 'split': 'floating', 'floatingBorder': 'rounded', 'autoAction': { 'name': 'preview', 'delay': 50 }, 'previewFloating': v:true, 'previewFloatingBorder': 'rounded' },
	\})

" ghq
call ddu#custom#patch_local('ghq', {
	\	'sources': [{ 'name': 'ghq' }],
	\	'sourceParams': {
	\		'ghq': {
	\			'bin': expand('~/.asdf/shims/ghq'),
	\			'display': 'relative',
	\			'rootPath': expand('~/Projects')
	\		}
	\	},
	\	'kindOptions': { 'file': { 'defaultAction': 'cd' } }
	\})

" rg
call ddu#custom#patch_local('grep', {
	\	'ui': 'ff',
	\	'sourceParams': {
	\		'rg': {
	\			'args': ['--column', '--no-heading', '--color', 'never']
	\		}
	\	},
	\})

" preview settings
function! s:set_size() abort
let winCol = &columns / 8
let winWidth = &columns - (&columns / 4)
let winRow = &lines / 8
let winHeight = &lines - (&lines / 4)
call ddu#custom#patch_global({
	\	'uiParams': {
	\		'filer': #{
	\			winCol: winCol, winRow: winRow, winWidth: winWidth / 2, winHeight: winHeight,
	\			previewCol: winCol + winWidth / 2 + 2, previewRow: winRow + winHeight + 2, previewWidth: winWidth / 2, previewHeight: winHeight,
	\		},
	\		'ff': #{
	\			winCol: winCol, winRow: winRow, winWidth: winWidth / 2, winHeight: winHeight,
	\			previewCol: winCol + winWidth / 2 + 2, previewRow: winRow + winHeight + 5, previewWidth: winWidth / 2, previewHeight: winHeight + 3,
	\		},
	\	}
	\})
endfunction
call s:set_size()

" commands
command! File call ddu#start({ 'sources': [{ 'name': 'file' }], 'ui': 'filer' })
command! FileRec call ddu#start({ 'sources': [{ 'name': 'file_rec' }], 'ui': 'filer' })
command! Line call ddu#start({ 'sources': [{ 'name': 'line' }], 'ui': 'ff' })
command! Repo call ddu#start({ 'name': 'ghq', 'ui': 'filer' })
command! Buffers call ddu#start({ 'sources': [{ 'name': 'window' }], 'kindOptions': { '_': { 'defaultAction': 'open' } } })
command! Colorschemes call ddu#start({ 'sources': [{ 'name': 'colorscheme' }] })
command! Mru call ddu#start({ 'sources': [{ 'name': 'mr', 'params': { 'current': v:true } }] })
command! Og call ddu#start({ 'name': 'grep', 'sources': [ { 'name': 'rg', 'params': { 'input': expand('<cword>') }  }] })

" keymapping
" nnoremap <silent> ;g <Cmd>Ddu -name=search rg -source-param-input=`input('Pattern: ')`<CR>
'''

# {{{ ddu-ui

# ui for fuzzy finder
[[plugins]]
repo = 'Shougo/ddu-ui-ff'
hook_add = '''
autocmd FileType ddu-ff call s:ddu_ui_ff_settings()
autocmd FileType ddu-ff_filter call s:ddu_ui_ff_filter_settings()

function! s:ddu_ui_ff_settings() abort
	nnoremap <buffer><silent> q <Cmd>call ddu#ui#ff#do_action('quit')<CR>
	nnoremap <buffer><silent> i <Cmd>call ddu#ui#ff#do_action('openFilterWindow')<CR>
	nnoremap <buffer><silent> <CR> <Cmd>call ddu#ui#ff#do_action('itemAction')<CR>
	nnoremap <buffer><silent> c <Cmd>call ddu#ui#ff#do_action('itemAction', {'name': 'cd'})<CR>
	nnoremap <buffer><silent> <C-l> <Cmd>call ddu#ui#ff#do_action('refreshItems')<CR>
	nnoremap <buffer><silent> <Space> <Cmd>call ddu#ui#ff#do_action('toggleSelectItem')<CR>
	nnoremap <buffer> p <Cmd>call ddu#ui#ff#do_action('preview')<CR>
	nnoremap <buffer> a <Cmd>call ddu#ui#ff#do_action('chooseAction')<CR>
	nnoremap <buffer> v <Cmd>call ddu#ui#ff#do_action('itemAction', {'name': 'open', 'params': {'command': 'vsplit'}})<CR>
	nnoremap <buffer> s <Cmd>call ddu#ui#ff#do_action('itemAction', {'name': 'open', 'params': {'command': 'split'}})<CR>
endfunction

function! s:ddu_ui_ff_filter_settings() abort
	inoremap <buffer> <CR> <Esc><Cmd>call ddu#ui#ff#close()<CR>
	nnoremap <buffer> <CR> <Cmd>call ddu#ui#ff#close()<CR>
endfunction
'''

# ui for filer
[[plugins]]
repo = 'Shougo/ddu-ui-filer'
hook_add = '''
autocmd FileType ddu-filer call s:ddu_my_settings()
function! s:ddu_my_settings() abort
	nnoremap <buffer><silent> <CR> <Cmd>call ddu#ui#filer#do_action('itemAction')<CR>
	nnoremap <buffer><silent> <Space> <Cmd>call ddu#ui#filer#do_action('toggleSelectItem')<CR>
	nnoremap <buffer> o <Cmd>call ddu#ui#filer#do_action('expandItem', {'mode': 'toggle'})<CR>
	nnoremap <buffer><silent> q <Cmd>call ddu#ui#filer#do_action('quit')<CR>
	nnoremap <buffer> v <Cmd>call ddu#ui#filer#do_action('itemAction', {'name': 'open', 'params': {'command': 'vsplit'}})<CR>
	nnoremap <buffer> s <Cmd>call ddu#ui#filer#do_action('itemAction', {'name': 'open', 'params': {'command': 'split'}})<CR>

	nnoremap <buffer> c <Cmd>call ddu#ui#filer#multi_actions([ ['itemAction', {'name': 'copy'}], ['clearSelectAllItems'] ])<CR>
	nnoremap <buffer> d <Cmd>call ddu#ui#filer#do_action('itemAction', #{ name: 'delete' })<CR>
	nnoremap <buffer> D <Cmd>call ddu#ui#filer#do_action('itemAction', #{ name: 'trash' })<CR>
	nnoremap <buffer> m <Cmd>call ddu#ui#filer#do_action('itemAction', #{ name: 'move' })<CR>
	nnoremap <buffer> r <Cmd>call ddu#ui#filer#do_action('itemAction', #{ name: 'rename' })<CR>
	nnoremap <buffer> p <Cmd>call ddu#ui#filer#do_action('itemAction', #{ name: 'paste' })<CR>
	nnoremap <buffer> P <Cmd>call ddu#ui#filer#do_action('preview')<CR>
	nnoremap <buffer> N <Cmd>call ddu#ui#filer#do_action('itemAction', #{ name: 'newDirectory' })<CR>
	nnoremap <buffer> n <Cmd>call ddu#ui#filer#do_action('itemAction', #{ name: 'newFile' })<CR>
	nnoremap <buffer> ~ <Cmd>call ddu#ui#filer#do_action('itemAction', #{ name: 'narrow', params: #{ path: expand('~') } })<CR>
	nnoremap <buffer> h <Cmd>call ddu#ui#filer#do_action('itemAction', #{ name: 'narrow', params: #{ path: '..' } })<CR>
endfunction
'''

# }}}

# {{{ ddu-column

[[plugins]]
repo = 'ryota2357/ddu-column-icon_filename'

# }}}

[[plugins]]
repo = 'Shougo/ddu-source-file'
on_source = 'ddu.vim'

[[plugins]]
repo = 'Shougo/ddu-kind-file'
on_source = 'ddu.vim'

[[plugins]]
repo = '4513ECHO/ddu-source-ghq'
on_source = 'ddu.vim'

[[plugins]]
repo = '4513ECHO/ddu-source-colorscheme'
on_source = 'ddu.vim'

[[plugins]]
repo = 'kamecha/ddu-source-window'
on_source = 'ddu.vim'

[[plugins]]
repo = 'shun/ddu-source-rg'
on_source = 'ddu.vim'

[[plugins]]
repo = 'lambdalisue/mr.vim'
on_source = 'ddu.vim'

[[plugins]]
repo = 'kuuote/ddu-source-mr'
depends = 'mr.vim'
on_source = 'ddu.vim'

[[plugins]]
repo = 'Shougo/ddu-commands.vim'
on_source = 'ddu.vim'

[[plugins]]
repo = 'Shougo/ddu-source-line'
on_source = 'ddu.vim'
